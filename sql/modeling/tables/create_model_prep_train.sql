CREATE TABLE IF NOT EXISTS model_output.train(
    new_er TEXT,
    new_mr TEXT,
    gender TEXT,
    city TEXT,
    age_years NUMERIC,
    triage_datetime TIMESTAMP,
    triagecomplaint TEXT,
    bp TEXT,
    tr_pulse NUMERIC,
    tr_temp NUMERIC,
    tr_resp NUMERIC,
    acuity TEXT,
    visit_datetime TIMESTAMP,
    systolic_agg TEXT,
    diastolic_agg TEXT,
    temperature_agg TEXT,
    weight_agg TEXT,
    o2sat_agg TEXT,
    nurse_id_agg TEXT,
    hopi_agg TEXT,
    disposition TEXT,
    disposition_time TIMESTAMP,
    ed_dx_hash BIGINT,
    ed_dx TEXT,
    category TEXT,
    code TEXT,
    unique_id VARCHAR(100),
    PRIMARY KEY (new_mr, new_er, ed_dx_hash)
);
INSERT INTO model_output.train
SELECT new_er,
    new_mr,
    gender,
    city,
    age_years,
    triage_datetime,
    triagecomplaint,
    bp,
    tr_pulse,
    tr_temp,
    tr_resp,
    acuity,
    visit_datetime,
    systolic_agg,
    diastolic_agg,
    temperature_agg,
    weight_agg,
    o2sat_agg,
    nurse_id_agg,
    hopi_agg,
    disposition,
    disposition_time,
    processed.codes.ed_dx_hash,
    processed.codes.ed_dx,
    processed.codes.category,
    processed.codes.code
FROM processed.transactions
    INNER JOIN processed.codes ON transactions.ed_dx_hash = codes.ed_dx_hash;
UPDATE model_output.train
SET unique_id = CONCAT(new_mr, new_er, ed_dx_hash);